{"version":3,"sources":["../../src/gamecanvas/gc-c2d.js"],"names":["GameCanvasBase","GameBase","GameCanvas","constructor","_canvas","undefined","_ctx","clearScreen","clearRect","width","height","setColor","r","g","b","fillStyle","strokeStyle","setLineWidth","lineWidth","lineCap","lineJoin","setFont","fontName","fontStyle","fontSize","font","textBaseline","getStringWidth","str","measureText","drawString","x","y","fillText","drawCenterString","drawRightString","drawLine","sx","sy","ex","ey","beginPath","_lineWidth","moveTo","lineTo","stroke","drawRect","w","h","strokeRect","fillRect","drawCircle","fillCircle","getImageWidth","filename","getImageHeight","drawImage","key","img","_imageMap","get","complete","drawClipImage","u","v","drawScaledRotateImage","xsize","ysize","rotate","px","py","checkHitImage","key1","x1","y1","key2","x2","y2","img1","_imgMap","img2","checkHitRect","_onLoad","document","createElement","setAttribute","body","appendChild","getContext","_onResizeWindow","bodyW","_body","clientWidth","bodyH","clientHeight","canvasW","_width","canvasH","_profilerEnabled","_height","_scale","Math","min","displayW","displayH","_pointer","scale","_drawProfiler","updateTime","drawTime","pushStyle","profilerX","profilerY","profilerW","profilerH","frameW","maxFrameCount","_profileList","length","shift","fpsAve","i","size","frame","deltaTime","renderV","renderH","scriptingV","scriptingH","textW","trace","_key","_motion","_location","geolocationStatus","checkHitPointer","checkHitPointerUp","startGeolocationService","popStyle","gc","Game"],"mappings":"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","sourcesContent":["\r\nimport GameCanvasBase from \"./types/GameCanvasBase.js\";\r\nimport GameBase from \"./types/GameBase.js\";\r\n\r\nclass GameCanvas extends GameCanvasBase {\r\n    _canvas = undefined;\r\n    _ctx = undefined;\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    clearScreen() {\r\n        this._ctx.clearRect(0, 0, this._canvas.width, this._canvas.height);\r\n    }\r\n    setColor(r, g, b) {\r\n        super.setColor(r, g, b);\r\n        this._ctx.fillStyle = `rgb(${r},${g},${b})`;\r\n        this._ctx.strokeStyle = `rgb(${r},${g},${b})`;\r\n    }\r\n    setLineWidth(width) {\r\n        super.setLineWidth(width);\r\n        this._ctx.lineWidth = width;\r\n        this._ctx.lineCap = \"butt\";\r\n        this._ctx.lineJoin = \"miter\";\r\n    }\r\n    setFont(fontName, fontStyle, fontSize) {\r\n        super.setFont(fontName, fontStyle, fontSize);\r\n        this._ctx.font = `${fontSize}px ${fontName}`;\r\n        this._ctx.textBaseline = \"top\";\r\n    }\r\n    getStringWidth(str) {\r\n        return this._ctx.measureText(str).width;\r\n    }\r\n    drawString(str, x, y) {\r\n        this._ctx.fillText(str, x, y);\r\n    }\r\n    drawCenterString(str, x, y) {\r\n        this.drawString(str, x - this.getStringWidth(str) / 2, y);\r\n    }\r\n    drawRightString(str, x, y) {\r\n        this.drawString(str, x - this.getStringWidth(str), y);\r\n    }\r\n    drawLine(sx, sy, ex, ey) {\r\n        this._ctx.beginPath();\r\n        if (this._lineWidth === 1) {\r\n            this._ctx.moveTo(sx + 0.5, sy + 0.5);\r\n            this._ctx.lineTo(ex + 0.5, ey + 0.5);\r\n        } else {\r\n            this._ctx.moveTo(sx, sy);\r\n            this._ctx.lineTo(ex, ey);\r\n        }\r\n        this._ctx.stroke();\r\n    }\r\n    drawRect(x, y, w, h) {\r\n        if (this._lineWidth === 1) {\r\n            this._ctx.strokeRect(x + 0.5, y + 0.5, w, h);\r\n        } else {\r\n            this._ctx.strokeRect(x, y, w, h);\r\n        }\r\n    }\r\n    fillRect(x, y, w, h) {\r\n        this._ctx.fillRect(x, y, w, h);\r\n    }\r\n    drawCircle(x, y, r) {\r\n        // todo\r\n    }\r\n    fillCircle(x, y, r) {\r\n        // todo\r\n    }\r\n    getImageWidth(filename) {\r\n        // todo\r\n    }\r\n    getImageHeight(filename) {\r\n        // todo\r\n    }\r\n    drawImage(key, x, y) {\r\n        const img = this._imageMap.get(key);\r\n        if (img && img.complete) this._ctx.drawImage(img, x, y);\r\n    }\r\n    drawClipImage(key, x, y, u, v, w, h) {\r\n        // todo\r\n    }\r\n    drawScaledRotateImage(key, x, y, xsize, ysize, rotate, px, py) {\r\n        // todo\r\n    }\r\n    checkHitImage(key1, x1, y1, key2, x2, y2) {\r\n        const img1 = this._imgMap.get(key1);\r\n        const img2 = this._imgMap.get(key2);\r\n        if (!img || !img.complete || !img2 || !img2.complete) return false;\r\n        return this.checkHitRect(x1, y1, img1.width, img1.height, x2, y2, img2.width, img2.height);\r\n    }\r\n\r\n    _onLoad() {\r\n        this._canvas = document.createElement(\"canvas\");\r\n        this._canvas.setAttribute(\"id\", \"gamecanvas\");\r\n        document.body.appendChild(this._canvas);\r\n        this._ctx = this._canvas.getContext(\"2d\");\r\n        super._onLoad(this._canvas);\r\n    }\r\n    _onResizeWindow() {\r\n        const bodyW = this._body.clientWidth;\r\n        const bodyH = this._body.clientHeight;\r\n        const canvasW = this._width;\r\n        const canvasH = this._profilerEnabled ? this._height + 120 : this._height;\r\n        this._scale = Math.min(1, bodyW / canvasW, bodyH / canvasH);\r\n        const displayW = ~~(canvasW * this._scale);\r\n        const displayH = ~~(canvasH * this._scale);\r\n\r\n        this._canvas.setAttribute(\"width\", canvasW);\r\n        this._canvas.setAttribute(\"height\", canvasH);\r\n        this._canvas.setAttribute(\"style\", `width: ${displayW}px; height ${displayH}px`);\r\n\r\n        this._pointer.scale = 1.0 / this._scale;\r\n    }\r\n    _drawProfiler(updateTime, drawTime) {\r\n        this.pushStyle();\r\n        {\r\n            super._drawProfiler(updateTime, drawTime);\r\n\r\n            const profilerX = 0;\r\n            const profilerY = this._height;\r\n            const profilerW = this._width;\r\n            const profilerH = 120;\r\n\r\n            const frameW = 2;\r\n            const maxFrameCount = profilerW / frameW;\r\n            while (this._profileList.length > maxFrameCount) this._profileList.shift();\r\n\r\n            this.setColor(255, 255, 255);\r\n            this.fillRect(profilerX, profilerY, profilerW, profilerH);\r\n\r\n            let fpsAve = 0;\r\n            for (let i = 0, size = this._profileList.length; i < size; i++) {\r\n                const frame = this._profileList[i];\r\n                fpsAve += 1000 / frame.deltaTime;\r\n\r\n                const renderV = frame.deltaTime * 0.001 * 60;\r\n                const renderH = ~~(Math.min(2, renderV) * profilerH * 0.5);\r\n                this.setColor(222, 222, 222);\r\n                this.fillRect(profilerX + i * frameW, profilerY + profilerH - renderH, frameW, renderH);\r\n\r\n                const scriptingV = (frame.updateTime + frame.drawTime) * 0.001 * 60;\r\n                const scriptingH = ~~(Math.min(2, scriptingV) * profilerH * 0.5);\r\n                if (scriptingV < 1) { this.setColor(0, 154, 102); }\r\n                else if (scriptingV < 2) { this.setColor(238, 102, 0); }\r\n                else { this.setColor(255, 0, 0); }\r\n                this.fillRect(profilerX + i * frameW, profilerY + profilerH - scriptingH, frameW, scriptingH);\r\n            }\r\n            fpsAve /= this._profileList.length;\r\n\r\n            this.setColor(0, 0, 0);\r\n            this.setFont(\"Arial\", null, 12);\r\n            this.setLineWidth(1);\r\n            {\r\n                const str = `${~~this.deltaTime}ms ( ${~~fpsAve}fps )`;\r\n                const textW = this._ctx.measureText(str).width;\r\n                this.drawString(str, profilerX + profilerW - 10 - textW, profilerY + 10);\r\n            }\r\n            {\r\n                this.drawString(this._pointer.trace(), profilerX + 10, profilerY + 10);\r\n                this.drawString(this._key.trace(), profilerX + 10, profilerY + 28);\r\n                this.drawString(this._motion.trace(), profilerX + 10, profilerY + 46);\r\n                this.drawString(this._location.trace(), profilerX + 10, profilerY + 64);\r\n            }\r\n            if (this.geolocationStatus === \"stopped\") {\r\n                if (!this.checkHitPointer(profilerX + 128, profilerY + 60, 80, 16)) {\r\n                    this.drawRect(profilerX + 128, profilerY + 61, 80, 15);\r\n                    this.drawCenterString(\"Request\", profilerX + 168, profilerY + 64);\r\n                } else {\r\n                    this.fillRect(profilerX + 128, profilerY + 60, 80, 16);\r\n                    this.setColor(255, 255, 255);\r\n                    this.drawCenterString(\"Request\", profilerX + 168, profilerY + 64);\r\n                }\r\n                if (this.checkHitPointerUp(profilerX + 128, profilerY + 60, 80, 16)) {\r\n                    this.startGeolocationService();\r\n                }\r\n            }\r\n        }\r\n        this.popStyle();\r\n    }\r\n}\r\n\r\nconst gc = new GameCanvas();\r\n\r\nclass Game extends GameBase {\r\n    constructor() {\r\n        super(gc);\r\n    }\r\n}\r\n\r\nexport { gc, Game as GameBase };\r\n"],"file":"gc-c2d.js"}