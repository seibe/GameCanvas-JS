{"version":3,"sources":["../../../src/gamecanvas/types/KeyEventManager.js"],"names":["Key","KeyEventManager","constructor","_eventQueue","undefined","_keyMap1","_keyMap2","_frameCount","Array","Map","callback","e","push","window","addEventListener","onEnterFrame","frameCount","elapsedTime","length","shift","key","get","code","type","set","state","onLeaveFrame","size","values","delete","_getFromCodeOrKey","codeOrKey","getKeyPressLength","beginFrame","isKeyPress","isKeyPushed","isKeyReleased","trace","from","keys","join"],"mappings":"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","sourcesContent":["\r\nimport Key from \"./Key.js\";\r\n\r\nexport default class KeyEventManager {\r\n    _eventQueue = undefined;\r\n    _keyMap1 = undefined;\r\n    _keyMap2 = undefined;\r\n    _frameCount = 0;\r\n\r\n    constructor() {\r\n        this._eventQueue = new Array();\r\n        this._keyMap1 = new Map();\r\n        this._keyMap2 = new Map();\r\n\r\n        const callback = e => { this._eventQueue.push(e); };\r\n        window.addEventListener(\"keydown\", callback, false);\r\n        window.addEventListener(\"keyup\", callback, false);\r\n    }\r\n\r\n    onEnterFrame(frameCount, elapsedTime) {\r\n        this._frameCount = frameCount;\r\n\r\n        while (this._eventQueue.length > 0) {\r\n            const e = this._eventQueue.shift();\r\n            let key = this._keyMap1.get(e.code);\r\n            switch (e.type) {\r\n                case \"keydown\":\r\n                    if (!key) {\r\n                        key = new Key(e.code, e.key, elapsedTime, frameCount, \"keydown\");\r\n                        this._keyMap1.set(e.code, key);\r\n                        this._keyMap2.set(e.key, key);\r\n                    }\r\n                    break;\r\n                    \r\n                case \"keyup\":\r\n                    if (key) key.state = \"keyup\";\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n    onLeaveFrame() {\r\n        if (this._keyMap1.size > 0) {\r\n            for (const key of this._keyMap1.values()) {\r\n                if (key.state === \"keyup\") {\r\n                    this._keyMap1.delete(key.code);\r\n                    this._keyMap2.delete(key.key);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    _getFromCodeOrKey(codeOrKey) {\r\n        return this._keyMap1.get(codeOrKey) || this._keyMap2.get(codeOrKey);\r\n    }\r\n\r\n    getKeyPressLength(code) {\r\n        const key = this._getFromCodeOrKey(code);\r\n        if (!key) return 0;\r\n        if (key.state === \"keyup\") return -1;\r\n        return (this._frameCount - key.beginFrame + 1);\r\n    }\r\n    isKeyPress(code) {\r\n        const key = this._getFromCodeOrKey(code);\r\n        return (key && key.state !== \"keyup\");\r\n    }\r\n    isKeyPushed(code) {\r\n        const key = this._getFromCodeOrKey(code);\r\n        return (key && key.beginFrame === this._frameCount);\r\n    }\r\n    isKeyReleased(code) {\r\n        const key = this._getFromCodeOrKey(code);\r\n        return (key && key.state === \"keyup\");\r\n    }\r\n\r\n    trace() {\r\n        if (this._keyMap1.size > 0) {\r\n            return \"Key: \" + Array.from(this._keyMap1.keys()).join(\", \");\r\n        }\r\n        return \"Key: none\";\r\n    }\r\n}\r\n"],"file":"KeyEventManager.js"}